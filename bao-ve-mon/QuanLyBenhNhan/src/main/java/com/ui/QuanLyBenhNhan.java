package com.ui;

import com.dao.BacSiDAO;
import com.dao.BenhNhanDAO;
import com.modal.BacSi;
import com.modal.BenhNhan;
import com.utils.Auth;
import com.utils.MsgBox;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MinIT
 */
public class QuanLyBenhNhan extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyBenhNhan
     */
    public QuanLyBenhNhan() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlQLBN = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstBacSi = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBenhNhanChiTiet = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtTongChiPhi = new javax.swing.JTextField();
        pnlDSBN = new javax.swing.JPanel();
        lblBenhNhan = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTKBenhNhan = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Phần mềm quản lý bệnh nhân");

        jPanel1.setLayout(new java.awt.CardLayout());

        lstBacSi.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        lstBacSi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstBacSiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstBacSi);

        jLabel1.setText("DANH SÁCH BÁC SĨ");

        jLabel2.setText("DANH SÁCH BỆNH NHÂN");

        tblBenhNhanChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã bệnh nhân", "Tên bệnh nhân", "Chuẩn đoán", "Chi phí"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBenhNhanChiTiet.setColumnSelectionAllowed(true);
        tblBenhNhanChiTiet.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblBenhNhanChiTiet);
        tblBenhNhanChiTiet.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel3.setText("Tổng chi phí");

        javax.swing.GroupLayout pnlQLBNLayout = new javax.swing.GroupLayout(pnlQLBN);
        pnlQLBN.setLayout(pnlQLBNLayout);
        pnlQLBNLayout.setHorizontalGroup(
            pnlQLBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLBNLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQLBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQLBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                    .addGroup(pnlQLBNLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlQLBNLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTongChiPhi)))
                .addContainerGap())
        );
        pnlQLBNLayout.setVerticalGroup(
            pnlQLBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQLBNLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlQLBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlQLBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addGroup(pnlQLBNLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlQLBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTongChiPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel1.add(pnlQLBN, "card2");

        lblBenhNhan.setText("DANH SÁCH BỆNH NHÂN");

        tblTKBenhNhan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã bệnh nhân", "Tên bệnh nhân"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTKBenhNhan.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblTKBenhNhan);

        javax.swing.GroupLayout pnlDSBNLayout = new javax.swing.GroupLayout(pnlDSBN);
        pnlDSBN.setLayout(pnlDSBNLayout);
        pnlDSBNLayout.setHorizontalGroup(
            pnlDSBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSBNLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDSBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDSBNLayout.createSequentialGroup()
                        .addComponent(lblBenhNhan)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDSBNLayout.setVerticalGroup(
            pnlDSBNLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSBNLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBenhNhan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(pnlDSBN, "card3");

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lstBacSiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstBacSiMouseClicked
        // TODO add your handling code here:
        fillTableBenhNhanChiTiet();
    }//GEN-LAST:event_lstBacSiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyBenhNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyBenhNhan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBenhNhan;
    private javax.swing.JList<BacSi> lstBacSi;
    private javax.swing.JPanel pnlDSBN;
    private javax.swing.JPanel pnlQLBN;
    private javax.swing.JTable tblBenhNhanChiTiet;
    private javax.swing.JTable tblTKBenhNhan;
    private javax.swing.JTextField txtTongChiPhi;
    // End of variables declaration//GEN-END:variables

    BenhNhanDAO bnDAO = new BenhNhanDAO();
    BacSiDAO bsDAO = new BacSiDAO();

    void init() {
        this.setLocationRelativeTo(null);
        new DangNhap(this, true).setVisible(true);

        if (!Auth.isManager()) {
            pnlQLBN.setVisible(false);
            pnlDSBN.setVisible(true);
            fillTableTKBenhNhan();
        }

        fillList();
    }

    void fillList() {
        DefaultListModel model = new DefaultListModel();
        model.removeAllElements();
        try {
            List<BacSi> list = bsDAO.selectAll();
            for (BacSi bs : list) {
                model.addElement(bs);
            }
            lstBacSi.setModel(model);
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    void fillTableTKBenhNhan() {
        DefaultTableModel model = (DefaultTableModel) tblTKBenhNhan.getModel();
        model.setRowCount(0);
        try {
            List<BenhNhan> list = bnDAO.selectAll();
            for (BenhNhan bn : list) {
                model.addRow(new Object[]{
                    bn.getMaBN(),
                    bn.getTenBN()
                });
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

    void fillTableBenhNhanChiTiet() {
        DefaultTableModel model = (DefaultTableModel) tblBenhNhanChiTiet.getModel();
        model.setRowCount(0);
        try {
            BacSi bs = lstBacSi.getSelectedValue();
            List<Object[]> list = bnDAO.getBenhNhan(bs.getMaBS());
            for (Object[] row : list) {
                model.addRow(new Object[]{
                    row[0],
                    row[1],
                    row[2],
                    row[3]
                });
            }

            DecimalFormat formatter = new DecimalFormat("#0,000");
            double tongChiPhi = bnDAO.getTongChiPhi(bs.getMaBS());
            txtTongChiPhi.setText(formatter.format(tongChiPhi));
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
            e.printStackTrace();
        }
    }

}
